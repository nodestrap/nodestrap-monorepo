TODO: moved category:
fooVariant => // layouts: or // appearances: => // variants:

TODO upgrade ButtonComponentProps of <DropdownButton> & <ToggleButton>

TODO: create a dedicated package of:
FeatureMixin
VariantMixin
StateMixin

TODO: upgrade <Masonry> to useOrientationableWithDirection


features
    background      useBackground   backgroundVars
    foreground      useForeground   foregroundVars
    border          useBorder       borderVars
    ring            useRing         ringVars

    padding         usePadding      paddingVars
    animation       useAnimation    animationVars
    
    floatable       [done] useFloatable    floatVars

variants
    sizes           multi-options   useSizable          sizeVars
    orientationable multi-options   useOrientationable  OrientationableVars
    nude            toggle-option   useNudeable         nudeVars
    themes          multi-options   useTheme            themeVars
    gradient        toggle-option   useGradientable     gradientVars
    outlined        toggle-option   use???              outlineVars
    mild            toggle-option   useMildable         mildVars

states
    excite          useExcitable    exciteVars
    
    enableDisable   useEnableable   enableVars
    activePassive   useActivable    activeVars
    
    focusBlur       useFocusable    focusVars
    arriveLeave     useArrivable    arriveVars
    
    pressRelease    usePressable    pressVars
    
    validInvalid    useValidation   validVars
    
    expandCollapse  [done] useCollapsible  collapsibleVars


fix <Alert> close button on mild={false}
fix <Alert> icon color   on mild={true}
test tree shake a Dropdown without Modal

fix fooElm constant with zero specificity:
^(export\s+)?const\s+\w+Elm\s*=.*?;

add <Range> with component based
change <Range> ref from HTMLElement to Element

fix peer dependencies for colors, borders, spacers, etc...

fix touchStart/End on <ActionControl>
fix press/release animation on keyboard press on <Range>

fix [aria-orientation] => from logical isOrientationBlock => convert to physical isOrientationVertical on <List> & <Range>
fix map physical isOrientationVertical on the handleMouse, handleKeyboard, flip trackUpper & trackLower



inline then block



group sequences:
// (layouts|positions|appearances|sizes|accessibilities|backgrounds|foregrounds|borders|spacings|typos|states|children|customize):

// layouts:

// positions:

// appearances:

// variants:

// classes:

// styles:

// sizes:

// scrolls:

// accessibilities:

// validations:

// formats:

// behaviors:

// backgrounds:

// foregrounds:

// borders:

// animations:

// spacings:

// typos:

// states:

// children:

// customize:



(filter|boxShadow|anim|keyframes)(disable|focus|arrived|press)
to
(filter|boxShadow|anim|keyframes)(disabled|focused|arrived|pressed)